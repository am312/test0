name: demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: 
  release:
    types: [published]

jobs:
  get-version:
    runs-on: ubuntu-latest
    env:
      TAG_NAME: ${{ github.event.release.tag_name }}
    steps:
      - name: Strip leading 'v' from tag and return as output
        id: version_name
        run: echo "version=$(echo ${TAG_NAME/#v/})" >> $GITHUB_OUTPUT
#           echo "::set-output name=version::$(echo ${TAG_NAME/#v/})"
    outputs:
      ver: ${{ steps.version_name.outputs.version }}
      
  test-and-set-version:
    needs: get-version
    runs-on: ubuntu-latest
    env: 
      VERSION: ${{needs.get-version.outputs.ver}}
      VERSIONED_RELEASE: v${{needs.get-version.outputs.ver}}
      RELEASE_ID: ${{ github.event.release.id }}

    steps:
      
#       - name: little test. 
#         run: |
#           echo ${{ github.event.release }}
#           echo ${{ github.event.release.id }} 
    
      - name: If release name is set and does not correspond correctly to tag (mismatch versioning in release name and tag), exit.
        if: ${{ github.event.release.name != '' && github.event.release.name != env.VERSION && github.event.release.name != env.VERSIONED_RELEASE }}
        run: |
          echo "Release name not equivilant to the version!"
          echo "Failing job."
          exit 1
                
#       - name: Update release name
#         id: update_release
#         uses: tubone24/update_release@v1.3.1
#         env:
#           GITHUB_TOKEN: ${{ github.token }}
#         with:
#           release_name: "${{ env.VERSION }}"

#       - name: update release name
#         uses: actions/github-script@v6
#         env:
#           RELEASE_ID: ${{ github.event.release.id }}
#         with:
#           script: |
#             const { RELEASE_ID } = process.env
#             console.log(`${RELEASE_ID} is the release id `)
#             octokit.rest.repos.updateRelease({
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               release_id: `${RELEASE_ID}`
#               name: 'Some New Name'
#             })  
#             console.log("success?")
      - name: Script test
        uses: actions/github-script@v6
        with:
          script: |
            console.log("Hello world test")
            const { dummy, dummy2, RELEASE_ID } = process.env
            console.log(`${RELEASE_ID} is release id... I think`)
            

  job-one:
    needs: get-version
    runs-on: ubuntu-latest
    env:
      VERSION: ${{needs.get-version.outputs.ver}}
    steps:
      - run: echo "VERSION IS NOW ${VERSION}"
      
  job-two:
    needs: get-version
    runs-on: ubuntu-latest
    env:
      VERSION: ${{needs.get-version.outputs.ver}}
    steps:
      - run: |
          echo "no bracket $VERSION"
          echo https://oss.sonatype.org/service/local/repositories/releases/content/com/datadoghq/dd-trace-ot/$VERSION/dd-trace-ot-$VERSION.jar
      



