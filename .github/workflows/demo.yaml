name: demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: 
  release:
    types: [published]

jobs:
  get-version:
    runs-on: ubuntu-latest
    env:
      TAG_NAME: ${{ github.event.release.tag_name }}
    steps:
      - name: Strip leading 'v' from tag and return as output
        id: version_name
        run: echo "version=$(echo ${TAG_NAME/#v/})" >> $GITHUB_OUTPUT
    outputs:
      ver: ${{ steps.version_name.outputs.version }}
      
  test-and-set-version:
    needs: get-version
    runs-on: ubuntu-latest
    env: 
      VERSION: ${{needs.get-version.outputs.ver}}
      VERSIONED_RELEASE: v${{needs.get-version.outputs.ver}}
      RELEASE_ID: ${{ github.event.release.id }}
    steps:
      - name: If release name is set and does not correspond correctly to tag (mismatch versioning in release name and tag), exit.
        if: ${{ github.event.release.name != '' && github.event.release.name != env.VERSION && github.event.release.name != env.VERSIONED_RELEASE }}
        run: |
          echo "Failing job. Release name is invalid for this tag. Clear the contents of the Release Name field and retry."
          exit 1
          
      - name: Update release name
        uses: actions/github-script@v6
        with:
          script: |
            const VERSION = process.env.VERSION
            const RELEASE_ID = process.env.RELEASE_ID
            
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: `${RELEASE_ID}`,
              name: `${VERSION}`
            })  
            
      - name: Set clean version as output
        id: version_name
        run: echo "version=${VERSION}" >> $GITHUB_OUTPUT
    outputs:
      ver: ${{ steps.version_name.outputs.version }}
      
  job-one:
    needs: [get-version, test-and-set-version]
    runs-on: ubuntu-latest
    env:
      VERSION: ${{needs.get-version.outputs.ver}}
    steps:
      - run: echo "VERSION IS NOW ${VERSION}"
      
  job-two:
    needs: [get-version, test-and-set-version]
    runs-on: ubuntu-latest
    env:
      VERSION: ${{needs.get-version.outputs.ver}}
    steps:
      - run: |
          echo "no bracket $VERSION"
          echo https://oss.sonatype.org/service/local/repositories/releases/content/com/datadoghq/dd-trace-ot/$VERSION/dd-trace-ot-$VERSION.jar
      



